{"ast":null,"code":"import _defineProperty from \"/home/madhav/Documents/Web Development/NextJS/slack-clone/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nvar authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null\n  },\n  reducers: {\n    setUser: function setUser(state, action) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: action.payload\n      });\n    }\n  }\n});\nvar authActions = authSlice.actions,\n    authReducer = authSlice.reducer;\nexport { authActions, authReducer };","map":{"version":3,"sources":["/home/madhav/Documents/Web Development/NextJS/slack-clone/src/redux/authSlice.ts"],"names":["createSlice","authSlice","name","initialState","user","reducers","setUser","state","action","payload","authActions","actions","authReducer","reducer"],"mappings":";;;;;;AACA,SAASA,WAAT,QAA2C,kBAA3C;AAMA,IAAMC,SAAc,GAAGD,WAAW,CAAC;AACjCE,EAAAA,IAAI,EAAE,MAD2B;AAEjCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE;AADM,GAFmB;AAKjCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OADQ,mBACAC,KADA,EACmBC,MADnB,EAC8C;AACpD,6CACKD,KADL;AAEEH,QAAAA,IAAI,EAAEI,MAAM,CAACC;AAFf;AAID;AANO;AALuB,CAAD,CAAlC;IAeiBC,W,GAAsCT,S,CAA/CU,O;IAA+BC,W,GAAgBX,S,CAAzBY,O;AAE9B,SAAQH,WAAR,EAAqBE,WAArB","sourcesContent":["import User from \"../firebase/firebase\";\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface SliceState {\n  user: User | null;\n}\n\nconst authSlice: any = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null\n  },\n  reducers: {\n    setUser(state: SliceState, action: PayloadAction<any>){\n      return{\n        ...state,\n        user: action.payload\n      }\n    }\n  }\n});\n\nconst { actions: authActions, reducer: authReducer } = authSlice;\n\nexport {authActions, authReducer}"]},"metadata":{},"sourceType":"module"}