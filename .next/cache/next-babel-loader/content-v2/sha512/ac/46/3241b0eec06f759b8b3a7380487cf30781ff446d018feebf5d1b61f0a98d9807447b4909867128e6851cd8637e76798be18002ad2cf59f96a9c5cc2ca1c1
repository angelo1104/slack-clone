{"ast":null,"code":"// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { init } from 'next-firebase-auth';\n\nconst initAuth = () => {\n  init({\n    authPageURL: '/auth',\n    appPageURL: '/',\n    loginAPIEndpoint: '/api/auth/login',\n    // required\n    logoutAPIEndpoint: '/api/auth/logout',\n    // required\n    // Required in most cases.\n    firebaseAdminInitConfig: {\n      credential: {\n        projectId: 'slack-f1af1',\n        clientEmail: 'firebase-adminsdk-zb7oj@slack-f1af1.iam.gserviceaccount.com',\n        // The private key must not be accesssible on the client side.\n        privateKey: process.env.FIREBASE_PRIVATE_KEY,\n        privateKeyId: \"d7141bb6ff6d36c0cab28d499e3327fd256f2d55\",\n        clientId: \"104597950845250539314\",\n        authUri: \"https://accounts.google.com/o/oauth2/auth\",\n        tokenUri: \"https://oauth2.googleapis.com/token\"\n      },\n      databaseURL: 'https://my-example-app.firebaseio.com'\n    },\n    firebaseClientInitConfig: {\n      apiKey: 'AIzaSyClpkDbvYjX-gMx06yxK0mUgIF9S0liE1I',\n      // required\n      authDomain: 'slack-f1af1.firebaseapp.com',\n      databaseURL: 'https://slack-f1af1-default-rtdb.firebaseio.com',\n      projectId: 'slack-f1af1',\n      storageBucket: \"slack-f1af1.appspot.com\",\n      messagingSenderId: \"205308401513\",\n      appId: \"1:205308401513:web:db0d47ae7ba0013d2bcff8\",\n      measurementId: \"G-9R6729X7GC\"\n    },\n    cookies: {\n      name: 'ExampleApp',\n      // required\n      // Keys are required unless you set `signed` to `false`.\n      // The keys cannot be accessible on the client side.\n      keys: [process.env.COOKIE_SECRET_CURRENT, process.env.COOKIE_SECRET_PREVIOUS],\n      httpOnly: true,\n      maxAge: 12 * 60 * 60 * 24 * 1000,\n      // twelve days\n      overwrite: true,\n      path: '/',\n      sameSite: 'strict',\n      secure: process.env.NEXT_PUBLIC_NODE_PRODUCTION === \"true\",\n      // set this to false in local (non-HTTPS) development\n      signed: true\n    }\n  });\n};\n\nexport default initAuth;","map":{"version":3,"sources":["/home/madhav/Documents/Web Development/NextJS/slack-clone/src/firebase/initAuth.ts"],"names":["init","initAuth","authPageURL","appPageURL","loginAPIEndpoint","logoutAPIEndpoint","firebaseAdminInitConfig","credential","projectId","clientEmail","privateKey","process","env","FIREBASE_PRIVATE_KEY","privateKeyId","clientId","authUri","tokenUri","databaseURL","firebaseClientInitConfig","apiKey","authDomain","storageBucket","messagingSenderId","appId","measurementId","cookies","name","keys","COOKIE_SECRET_CURRENT","COOKIE_SECRET_PREVIOUS","httpOnly","maxAge","overwrite","path","sameSite","secure","NEXT_PUBLIC_NODE_PRODUCTION","signed"],"mappings":"AAAA;AACA;AACA,SAASA,IAAT,QAAqB,oBAArB;;AAEA,MAAMC,QAAY,GAAG,MAAM;AACzBD,EAAAA,IAAI,CAAC;AACHE,IAAAA,WAAW,EAAE,OADV;AAEHC,IAAAA,UAAU,EAAE,GAFT;AAGHC,IAAAA,gBAAgB,EAAE,iBAHf;AAGkC;AACrCC,IAAAA,iBAAiB,EAAE,kBAJhB;AAIoC;AACvC;AACAC,IAAAA,uBAAuB,EAAE;AACvBC,MAAAA,UAAU,EAAE;AACVC,QAAAA,SAAS,EAAE,aADD;AAEVC,QAAAA,WAAW,EAAE,6DAFH;AAGV;AACAC,QAAAA,UAAU,EAAEC,OAAO,CAACC,GAAR,CAAYC,oBAJd;AAKVC,QAAAA,YAAY,EAAE,0CALJ;AAMVC,QAAAA,QAAQ,EAAE,uBANA;AAOVC,QAAAA,OAAO,EAAE,2CAPC;AAQVC,QAAAA,QAAQ,EAAE;AARA,OADW;AAWvBC,MAAAA,WAAW,EAAE;AAXU,KANtB;AAmBHC,IAAAA,wBAAwB,EAAE;AACxBC,MAAAA,MAAM,EAAE,yCADgB;AAC2B;AACnDC,MAAAA,UAAU,EAAE,6BAFY;AAGxBH,MAAAA,WAAW,EAAE,iDAHW;AAIxBV,MAAAA,SAAS,EAAE,aAJa;AAKxBc,MAAAA,aAAa,EAAE,yBALS;AAMxBC,MAAAA,iBAAiB,EAAE,cANK;AAOxBC,MAAAA,KAAK,EAAE,2CAPiB;AAQxBC,MAAAA,aAAa,EAAE;AARS,KAnBvB;AA6BHC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE,YADC;AACa;AACpB;AACA;AACAC,MAAAA,IAAI,EAAE,CACJjB,OAAO,CAACC,GAAR,CAAYiB,qBADR,EAEJlB,OAAO,CAACC,GAAR,CAAYkB,sBAFR,CAJC;AAQPC,MAAAA,QAAQ,EAAE,IARH;AASPC,MAAAA,MAAM,EAAE,KAAK,EAAL,GAAU,EAAV,GAAe,EAAf,GAAoB,IATrB;AAS2B;AAClCC,MAAAA,SAAS,EAAE,IAVJ;AAWPC,MAAAA,IAAI,EAAE,GAXC;AAYPC,MAAAA,QAAQ,EAAE,QAZH;AAaPC,MAAAA,MAAM,EAAEzB,OAAO,CAACC,GAAR,CAAYyB,2BAAZ,KAA4C,MAb7C;AAaqD;AAC5DC,MAAAA,MAAM,EAAE;AAdD;AA7BN,GAAD,CAAJ;AA8CD,CA/CD;;AAiDA,eAAerC,QAAf","sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { init } from 'next-firebase-auth'\n\nconst initAuth:any = () => {\n  init({\n    authPageURL: '/auth',\n    appPageURL: '/',\n    loginAPIEndpoint: '/api/auth/login', // required\n    logoutAPIEndpoint: '/api/auth/logout', // required\n    // Required in most cases.\n    firebaseAdminInitConfig: {\n      credential: {\n        projectId: 'slack-f1af1',\n        clientEmail: 'firebase-adminsdk-zb7oj@slack-f1af1.iam.gserviceaccount.com',\n        // The private key must not be accesssible on the client side.\n        privateKey: process.env.FIREBASE_PRIVATE_KEY,\n        privateKeyId: \"d7141bb6ff6d36c0cab28d499e3327fd256f2d55\",\n        clientId: \"104597950845250539314\",\n        authUri: \"https://accounts.google.com/o/oauth2/auth\",\n        tokenUri: \"https://oauth2.googleapis.com/token\",\n      },\n      databaseURL: 'https://my-example-app.firebaseio.com',\n    },\n    firebaseClientInitConfig: {\n      apiKey: 'AIzaSyClpkDbvYjX-gMx06yxK0mUgIF9S0liE1I', // required\n      authDomain: 'slack-f1af1.firebaseapp.com',\n      databaseURL: 'https://slack-f1af1-default-rtdb.firebaseio.com',\n      projectId: 'slack-f1af1',\n      storageBucket: \"slack-f1af1.appspot.com\",\n      messagingSenderId: \"205308401513\",\n      appId: \"1:205308401513:web:db0d47ae7ba0013d2bcff8\",\n      measurementId: \"G-9R6729X7GC\"\n    },\n    cookies: {\n      name: 'ExampleApp', // required\n      // Keys are required unless you set `signed` to `false`.\n      // The keys cannot be accessible on the client side.\n      keys: [\n        process.env.COOKIE_SECRET_CURRENT,\n        process.env.COOKIE_SECRET_PREVIOUS,\n      ],\n      httpOnly: true,\n      maxAge: 12 * 60 * 60 * 24 * 1000, // twelve days\n      overwrite: true,\n      path: '/',\n      sameSite: 'strict',\n      secure: process.env.NEXT_PUBLIC_NODE_PRODUCTION === \"true\", // set this to false in local (non-HTTPS) development\n      signed: true,\n    },\n  })\n}\n\nexport default initAuth"]},"metadata":{},"sourceType":"module"}