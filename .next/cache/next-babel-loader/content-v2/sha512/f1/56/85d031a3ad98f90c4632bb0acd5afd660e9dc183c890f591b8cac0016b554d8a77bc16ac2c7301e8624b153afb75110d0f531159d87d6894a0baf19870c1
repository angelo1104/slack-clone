{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/madhav/Documents/Web Development/NextJS/slack-clone/src/pages/index.tsx\";\nimport Head from \"next/head\";\nimport styles from \"../../styles/Home.module.scss\";\nimport { useSelector } from \"react-redux\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { withAuthUserTokenSSR } from 'next-firebase-auth';\n\nfunction Home() {\n  const {\n    count: {\n      count,\n      update\n    }\n  } = useSelector(state => state);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Create Next App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.main,\n      children: \"Let's build slack.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\nexport default Home; // eslint-disable-next-line @typescript-eslint/no-unused-vars,@typescript-eslint/ban-ts-comment\n// @ts-ignore\n\nexport const getServerSideProps = withAuthUserTokenSSR({})(async ({\n  AuthUser\n}) => {\n  // Optionally, get other props.\n  const token = await AuthUser.getIdToken();\n  return {\n    props: {\n      thing: token\n    }\n  };\n});","map":{"version":3,"sources":["/home/madhav/Documents/Web Development/NextJS/slack-clone/src/pages/index.tsx"],"names":["Head","styles","useSelector","withAuthUserTokenSSR","Home","count","update","state","container","main","getServerSideProps","AuthUser","token","getIdToken","props","thing"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,SAAsBC,WAAtB,QAAyC,aAAzC;AAEA;AACA;AACA,SAAuBC,oBAAvB,QAAmD,oBAAnD;;AAEA,SAASC,IAAT,GAA6B;AAC3B,QAAM;AACJC,IAAAA,KAAK,EAAE;AAAEA,MAAAA,KAAF;AAASC,MAAAA;AAAT;AADH,MAEFJ,WAAW,CAAEK,KAAD,IAAkBA,KAAnB,CAFf;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACO,SAAvB;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,GAAG,EAAC,MAAV;AAAiB,QAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAM,MAAA,SAAS,EAAEP,MAAM,CAACQ,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;AAED,eAAeL,IAAf,C,CAEA;AACA;;AACA,OAAO,MAAMM,kBAAkB,GAAGP,oBAAoB,CAAC,EAAD,CAApB,CAAyB,OAAO;AAAEQ,EAAAA;AAAF,CAAP,KAAwB;AACjF;AACA,QAAMC,KAAK,GAAG,MAAMD,QAAQ,CAACE,UAAT,EAApB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAEH;AADF;AADF,GAAP;AAKD,CATiC,CAA3B","sourcesContent":["import Head from \"next/head\";\nimport styles from \"../../styles/Home.module.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { State } from \"../redux/store\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { withAuthUser, withAuthUserTokenSSR } from 'next-firebase-auth'\n\nfunction Home(): JSX.Element {\n  const {\n    count: { count, update },\n  } = useSelector((state: State) => state);\n\n  return (\n    <div className={styles.container}>\n      <Head>\n        <title>Create Next App</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <main className={styles.main}>\n        Let's build slack.\n      </main>\n    </div>\n  );\n}\n\nexport default Home;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars,@typescript-eslint/ban-ts-comment\n// @ts-ignore\nexport const getServerSideProps = withAuthUserTokenSSR({})(async ({ AuthUser }) => {\n  // Optionally, get other props.\n  const token = await AuthUser.getIdToken()\n\n  return {\n    props: {\n      thing: token\n    }\n  }\n})\n\n"]},"metadata":{},"sourceType":"module"}